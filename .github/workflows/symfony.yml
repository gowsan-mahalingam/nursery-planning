name: Symfony

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: symfony
          MYSQL_PASSWORD: symfony
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, pdo_mysql
          tools: composer:v2

      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 --silent && echo "MySQL is up" && exit 0
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL did not start in time" && exit 1

      - name: Setup Database
        run: |
          php bin/console doctrine:database:create --if-not-exists
          php bin/console doctrine:migrations:migrate --no-interaction
        env:
          DATABASE_URL: "mysql://symfony:symfony@127.0.0.1:3306/test_db"

      - name: Clear Symfony Cache
        run: php bin/console cache:clear --no-warmup
        env:
          DATABASE_URL: "mysql://symfony:symfony@127.0.0.1:3306/test_db"

      - name: Run PHPUnit tests
        env:
          DATABASE_URL: "mysql://symfony:symfony@127.0.0.1:3306/test_db"
        run: vendor/bin/phpunit
